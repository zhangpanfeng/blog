如图所示，如果有五个元素需要排序，宏观上看需要排n-1趟，并且下标是从0到n-2（注意黑色下划线的起始位置），那么我们是不是可以写出一个循环出来，
for(int i = 0; i < size - 1; i++)
第一个for循环并不关心具体是怎么选出一个最小的放左边的，只是先找到下标的变化规律
接着我们看内部是如何实现选出最小值放左边的，这个实现相对插入排序有所不同，只用圈圈不易表达，
所以我们用一个具体例子来看。
对一个五个元素的数组进行排序：3 1 5 2 4
要比较，必须有一个参照物，我们假设每一趟中最左边元素（黑色下划线对应的最左边元素）为参照物（int minValueIndex = i），
然后拿之后的一个元素(int j = i + 1)和它比较，如果比它小，那么就改变参照物，把新的最小的元素作为参照物，继续拿它之后的元素与之比较，直到本趟结束
因为要拿j和左边的元素比较而没有j + 1，所以j可取到n-1
即for(int j = i + 1; j < size; j++)
这里有两个问题
1.选个元素作为参照物还是元素的下标？
2.每一趟比较完应该做些什么？
我们先回答第二个问题，每一趟比较完我们应该把最小的元素放到左边的位置上，需要进行一次元素交换
然后回答第一个问题，我们知道要进行元素交换，如果使用元素作为参照物，那么我只知道最小值是几，却不能和其他元素交换，因为我不知道
最小值的下标，但是如果我们知道了最小值的下标，就能知道最小值，所以我们选用下标作为参照物
for(int outer = 0; outer < size - 1; outer++)
{
	// 设置参照物为最左边元素
	int min = outer;
	for(int inner = outer + 1; inner < size; inner++)
	{
		if(source[inner] < source[min])
		{
			// 更新参照物
			min = inner;
		}
	}
	// 交换最小值和最左边值
	int temp = source[outer];
    source[outer] = source[min];
    source[min] = temp;
}
